<?php
$this->headLink()->appendStylesheet(
'http://' . CDN_SERVER . '/plugins/checkbox/filament/filament.css');
$this->headScript()->appendFile(
'http://' . CDN_SERVER . '/plugins/checkbox/filament/customInput.js');
?>
<style>
.holiday {
	background-color: maroon;
	color: red;
	text-decoration: line-through;
}

.checkGroup {
	font-family: "Courier New", Courier, monospace;
	background-color: #3399FF;
	color: blue;
}

.adjustment {
	color: blue;
}

.adjusted {
	background-color: #CCC;
}

.nonattendanceday {
	background-color: maroon;
}

.aligncenter {
	width: 50%;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
}
</style>
<div style="padding :2em 0 2em 0; text-align: center; " >
<form >Select date: <input type="text"
	id="datepicker1" readonly="readonly"
	class="ui-widget-content  ui-corner-all" style="text-align: center"></input> <span style="color: gray; " >(i.e. attendance date)</span><a
	style="text-decoration: none; font-size: small; float: right;"
	class="ui-priority-secondary ui-state-default ui-corner-all"
	href="<?=$this->url(array('module' => $this->module, 'controller' => 'rptfacatt', 'action' => 'getlastmarked'), 'default', true)?>">&nbsp;
Check recent marked periods &nbsp;<span
	style="margin: -1px 0px 0px -2px; float: right;"
	class="ui-icon ui-icon-link ui-state-default ui-corner-right"> </span></a>
</form>
</div>


<table id="prdlst" style="display: hidden;" class="scroll"></table>
<br />
<table id="stulistgrid" style="display: hidden;" class="scroll"
	cellpadding="0" cellspacing="0"></table>

<div id="statusdiv" class="aligncenter">
<form id="finalStatus">
<table style="padding: 0.5em;"  >
	<tr>
		<td><?php echo $this->formLabel('totalStudents', 'Total Students:')?></td>
		<td><input type="text" id="totalstudents"
			class="ui-widget-content  ui-corner-all" size="4" readonly="readonly"
			value="0" style="text-align: center"></input></td>
		<td><?php echo $this->formLabel('totalabsent', 'Total Absent:')?></td>
		<td><input type="text" id="totalabsent"
			class="ui-widget-content  ui-corner-all" size="4" readonly="readonly"
			value="0" style="text-align: center"></input></td>
		<td><?php echo $this->formLabel('iagree', 'I Agree')?></td>
		<td><?php echo $this->formCheckbox('iagree', 'I Agree', array('tabindex' => '150'))?>
		</td>
		<td>&nbsp;<?php echo $this->formButton('btnmark', 'Submit Attendance', array('tabindex' => '151', 'size' => '70%' ))?></td>
	</tr>
</table>
</form>
&nbsp;
</div>

<script type="text/javascript">
//$("#btnmark").hide();
$("#statusdiv").hide();
</script>
<script type="text/javascript">
var group_info=null;
var global_nfo=null;
$(function(){
	var staff_id = '<?php echo $this->staff_id;?>';
	var session_startdate = '<?php echo $this->session_startdate;?>';  
	var source_staff_id ;
	var subject_code; 
	var subject_mode_id;
	var semester_id;
	var weekday_number ;
	var period_date;
	var groupUrl;
	var serverDateObj;
	var isPeriodGridInit = false;
	var isStudentGridInit = false;
	var sessionStartdateObj;
	var totalstudent = 0;
	var holidays = null;
	var baseurl="<?php echo $this->url(array('controller' => $this->controller, 'action' => 'fillperiodgrid'), 'default', true)?>";
	var adjustmentUrl = "<?php echo $this->url( array('controller' => 'facultyadjustment', 'action' => 'gettodayadjustments'), 'default', true)?>";
	var periodStudentsUrl = "<?php echo $this->url(array('controller' => 'periodattendance', 'action' => 'getperiodstudents'), 'default', true)?>";
	var periodAttendanceUrl="<?php echo $this->url(array('controller' => 'periodattendance', 'action' => 'markperiodattendance'), 'default', true)?>";
	var studentAttendanceUrl="<?php echo $this->url(array('controller' => $this->controller, 'action' => 'markabsent'), 'default', true)?>";
	var isPeriodTakenUrl="<?php echo $this->url(array('controller' => 'periodattendance', 'action' => 'getisperiodtaken'), 'default', true)?>";
	var adjPeriodStudentUrl="<?php echo $this->url(array('controller' => $this->controller, 'action' => 'filladjustmentgroup'), 'default', true)?>";
	var holidayUrl = "<?php echo 'http://' . CORE_SERVER . $this->url(array('controller' => 'holiday', 'action' => 'getholidays'), 'default', true)?>";
	
	
	//Get HoliDays of Current Session.

	$.ajax({
		type: "GET",
		url: holidayUrl,
        dataType : 'jsonp',
        jsonp:'callback',
        data : {'format' : 'jsonp' },
		async : false,
		success :	function(response){
			holidays = response;
	}
	});
	
	serverDateObj = $.datepicker.parseDate('dd-mm-yy', $('#datetext').text());
	//TODO session_startdate is different because its date from db server.
	sessionStartdateObj= $.datepicker.parseDate('yy-mm-dd', session_startdate);
	/* utility functions */
	
	
	function noAttendanceDays(date) {
			 var m = date.getMonth(), d = date.getDate(), y = date.getFullYear();
			 if(date.getDay() == 0) 
			 {
				 return [false,'holiday','Sunday'] ;
			 }
			 if(holidays != null)
			 {
			 for (i = 0; i < holidays.length; i++) {
				var datearr= holidays[i].split('-');
				var ty=datearr[0];
				var tm = datearr[1]-1;
				var td = datearr[2];
				var purpose = datearr[3];
						 if( ((m == tm) && (y ==ty ) && (d==td))  || (date.getDay() == 0)) {
							 if(date.getDay() == 0) 
							 {
								 return [false,'holiday','Sunday'] ;
							 }
				 	 return [false,'holiday',purpose] ;
				 }
			} 
			}
			 return [true ,, 'Working Day'];
		}
	
		function noWeekendsOrHolidays(date) {
			return noAttendanceDays(date);
		}
		
       
 
	
$("#datepicker1").datepicker(
		{
			minDate : sessionStartdateObj,
			maxDate : serverDateObj,
			dateFormat: 'dd-mm-yy', 
			closeText: 'Close', 
			showButtonPanel: true,
			constrainInput : true,
			gotoCurrent: true,
			beforeShowDay: noWeekendsOrHolidays,
			onSelect :function(dateText, inst) {
			if(!isPeriodGridInit){
				initPeriodGrid();
			}
			$("#statusdiv").hide();
			$('#totalabsent').val('0');
			//$("#btnmark").hide();
			$('#iagree').attr('checked',0);	
			totalstudent = 0;
								
				$("#stulistgrid").clearGridData();
			    $("#prdlst").clearGridData();
			    $("#stulistgrid").clearGridData();
				$("#statusdiv").hide();
				setDefault();
	         	
				period_date = dateText;
				if(dateText){
				var todayDateObj=$.datepicker.parseDate('dd-mm-yy', dateText);
				weekday_number=todayDateObj.getDay();
				
				//return;
				/*
				* Get today's periods
				*/
				$.ajax({
					type: "GET",
					url: baseurl ,
					dataType : "json",
					async :  false,
					data: {weekday_number :weekday_number , period_date : dateText },
					success: function(response) {
							for(var cnt = 0;cnt <  response.length ;cnt++){
							var data = { period_number : response[cnt]['period_number'], 
										subject_code : response[cnt]['subject_name'], 
										subject_mode_id : response[cnt]['subject_mode_name'], 
										department_id : response[cnt]['department_id'], 
										degree_id : response[cnt]['degree_id'], 
										semester_id : response[cnt]['semester_id'],
										staff_id : response[cnt]['staff_id'] };
							$("#prdlst").addRowData(response[cnt]['period_number'],data);

							 $("#prdlst").setCell(response[cnt]['period_number'], 
                                     'period_number', 
                                     "", 
                                     "", 
                                     {title: response[cnt]['period_id']});
                             
							$("#prdlst").setCell(response[cnt]['period_number'], 
								                 'subject_code', 
								                 "", 
								                 "", 
								                 {title: response[cnt]['subject_code'] });
							$("#prdlst").setCell(response[cnt]['period_number'], 
								                 'subject_mode_id', 
								                 "", 
								                 "", 
								                 {title: response[cnt]['subject_mode_id']  });
							 if(response[cnt]['adjusted'] == 1)
			                 {
								$("#" +response[cnt]['period_number']).addClass("adjusted");
			                 }

							 if(response[cnt]['nonattendance'] == 1)
			                 {
								$("#" +response[cnt]['period_number']).addClass("nonattendanceday");
								
			                 }
			                 
							}

							
									
					},
					
					error: function(request,error) {
						alert("Bad Request: "+ request+ " " + error);
					}
						
				});
				
				 
			    
				/*
				* Get Today Adjustments
				*/
				$.ajax({
					type: "GET",
					url: adjustmentUrl ,
					dataType : "json",
					async :  false,
					data:	{ staff_id : staff_id , period_date : period_date  }, 
					success: function(response){
							if(response != null){
								for(var cnt = 0;cnt <  response.length ;cnt++){
									var data = { period_number : response[cnt]['period_number'], 
											     subject_code : response[cnt]['subject_name'], 
											     subject_mode_id : response[cnt]['subject_mode_name'], 
											     department_id : response[cnt]['department_id'], 
											     degree_id : response[cnt]['degree_id'], 
											     semester_id : response[cnt]['semester_id'],
												 staff_id	: response[cnt]['source_staff_id']					     };

								    
								     
								     
		                            $("#prdlst").addRowData(response[cnt]['period_id'],data);

		                           
		                            $("#prdlst").setCell(response[cnt]['period_id'], 
		                                     'period_number', 
		                                     "", 
		                                     "", 
		                                     {title: response[cnt]['period_id']});
                                    
		                            $("#prdlst").setCell(response[cnt]['period_id'], 
		                                                 'subject_code', 
		                                                 "", 
		                                                 "", 
		                                                 {title: response[cnt]['subject_code'] });
                                    
		                            $("#prdlst").setCell(response[cnt]['period_id'], 
		                                                 'subject_mode_id', 
		                                                 "", 
		                                                 "", 
		                                                 {title: response[cnt]['subject_mode_id']  });
                                    
									$("#" +response[cnt]['period_id']).addClass("adjustment");
								}
								}
							}
						});

				if($("#prdlst").getGridParam("records") == 0)
				{
					$("#datepicker1").datepicker( "hide" );
					hidePeriodColumns();
					hideColumns();
					alert("No periods on selected date");
					return;
					
				}
				
				hideColumns(); 
				showPeriodColumns();
				}
		
			
		},
		
		beforeShow: customDate,
		onClose : function(dateText, inst)
		{
		}
	
	 });
	
 	
function customDate(a) {  
    return {defaultDate: serverDateObj};  
}		
		
	
	
	//Student Grid
	var initStudentGrid = function(){
		$("#stulistgrid").jqGrid({
			datatype: "local",
			colNames:['Group 1','Group 2' , 'Group 3'],
			colModel:[ {name:'group1',index:'group1', width:100, sorttype:"int"},
						{name:'group2',index:'group2', width:100},
						{name:'group3',index:'group3', width:100}],
			caption: "Students",
			hoverrows : false,
			onCellSelect : function(rowid,icol,content){
				return false;
			},
			beforeSelectRow: function(rowid, e) {
				return false;
			}
		});
	};
	
	hideColumns(); 

	var initPeriodGrid = function(){
		////// PERIOD GRID //////
		jQuery("#prdlst").jqGrid({
			sortable: false, 
			datatype: "local",
			colNames:['Period Number','Subject','Subject Mode','Department','Degree','Semester','Staff'],
			colModel:[
						{name:'period_number',index:'period_number',width:60,align:'center'},
						{name:'subject_code',index:'subject_code'},
						{name:'subject_mode_id',index:'subject_mode_id',width:70},
						{name:'department_id',index:'department_id',width:40,align:'center'},
						{name:'degree_id',index:'degree_id',width:40,align:'center'},
						{name:'semester_id',index:'semester_id',width:40,align:'center'},
						{name:'staff_id',index:'staff_id',width:5,align:'center'}
			  		],
			caption: "Day Periods",
			
			//Load Complete Event
			 
			loadComplete : function (){
			$("#prdlst").hideCol(["staff_id"]);
			/*var counter=0;
			var dataIds = jQuery("#prdlst").jqGrid('getDataIDs');
			var ret;
				
			if(jQuery("#prdlst").getGridParam("records") <= 0)
			{
				alert('No Period Of Selected Date');	
			}*/
			},
			
			onSelectRow: function() {
				if (!isStudentGridInit) {
					initStudentGrid();
				}
				$("#statusdiv").hide();	
				period = $('#prdlst').getGridParam("selrow");
				$("#" + period).addClass("ui-state-highlight");
				var sub=$("#prdlst").getCell(period, 'subject_code');
				
				var $cell = $("#" + period).children(':eq(1)');
				subject_code =$cell.attr('title');
				$cell = $("#" + period).children(':eq(2)');
				subject_mode_id = $cell.attr('title');
				
				$cell = $("#" + period).children(':eq(0)');
				period_id = $cell.attr('title');
				source_staff_id = $("#prdlst").getCell(period, 'staff_id');			
				if($("#" + period).hasClass("adjusted"))
				{
					hideColumns();
					$("#stulistgrid").clearGridData();
					$("#statusdiv").hide();
					setDefault();
					alert("This Period is Adjusted");
					return;
				}
				if($("#" + period).hasClass("nonattendanceday"))
				{
					$("#stulistgrid").clearGridData();
					$("#statusdiv").hide();
					setDefault();
		         	alert('Non Attendance Day');
	     	    	return;	
				}

				
				
			var rowobj=$("#prdlst").getRowData(period);
			var department_id = rowobj.department_id;
			var degree_id = rowobj.degree_id;
			var period_number = rowobj.period_number;
			semester_id = rowobj.semester_id;

	        
			ttid1=0;
			ttid2=0;
			ttid3=0;
			if (period == null){
				period=0;
			} else {
				var tmp=0;
				$("#stulistgrid").clearGridData();
				
				var rqUrl="";
				if($("#" + period).hasClass("adjustment")){
						rqUrl=periodStudentsUrl;
				} else {
					rqUrl=periodStudentsUrl;
				}
				

				//Get List Of Students In Selected Period
				$.ajax({
					type: "GET",
					url: rqUrl,
					async : false,
					dataType : "json",
					data : {'department_id' : department_id,
		                 'degree_id' : degree_id, 
		                 'semester_id' :  semester_id, 
		                 'staff_id'  : source_staff_id, 
		                 'weekday_number' : weekday_number, 
		                 'period_number' : period_number, 
		                 'subject_code' : subject_code, 
		                 'subject_mode_id' : subject_mode_id, 
		                 'period_date' : period_date 
		                 , 'period_id' : period_id},
					success : 	function(response){
				    hideColumns();
					
					setDefault();
					totalstudent = 0;
					             		
					global_Info = response;
					totalstudents = response.totalstudents;
					$('#totalstudents').val(totalstudents);
					var totalgroups = response.totalgroups;
					var cnt = 0;
					var studentlist;
					var totalrows = response.totalrows;
					
					for(tmp=0;tmp <= totalrows ;tmp++){
						var data = { group1 :   "" };
						$("#stulistgrid").addRowData(tmp,data);
					}
					group_info = response.group_id;
					for(cnt=0;cnt < totalgroups ; cnt++){
						var group_id=	response.group_id[cnt]['group_id'];
					    var group_number = group_id.substring(group_id.length-1);
					    switch (eval(group_number)){
						    case 1 : 
							    var data = { group1 : '<input type="checkbox"  class="checkGroup" id="'  + group_id + '"  tabindex="'+ (cnt+1) +'"><label for="'  + group_id + '"><b> Mark '+group_id+' absent<b/></label>'} ;
							    $("#stulistgrid").setRowData(0, data);
							    break;
		                    case 2 :
	                            var data = { group2 : '<input type="checkbox" class="checkGroup" id="'  + group_id + '"  tabindex="'+ (cnt+1) +'"><label for="'  + group_id + '"><b> Mark '+group_id+' absent<b/></label>'} ;
	                            $("#stulistgrid").setRowData(0, data);
		                        break;
		                    case 3 :
	                            var data = { group3 : '<input type="checkbox" class="checkGroup" id="'  + group_id + '"  tabindex="'+ (cnt+1) +'"><label for="'  + group_id + '"><b> Mark '+group_id+' absent<b/></label>'} ;
	                            $("#stulistgrid").setRowData(0, data);
		                        break;
		                    default : alert('Unknown group_number :'+group_number);
					    }			
					}
					
					for(cnt=0;cnt < totalgroups ; cnt++){
						var group_id = response.group_id[cnt]['group_id'];
						var timetable_id = response.group_id[cnt]['timetable_id'];
						var stucnt=0;
						var group_number = group_id.substring(group_id.length-1);
						
						studentlist = response[group_id]['students'];
						$("#stulistgrid").setLabel("group" + group_number, group_id);
						$("#stulistgrid").showCol("group"+ group_number);
						
						if(studentlist.length  == 0)
						{
							hideColumns();
							setDefault();
							totalstudent = 0;
							alert('Students are not available');
							return;
						}
						

						for( stucnt=0;stucnt <studentlist.length ; stucnt++ ){

		                    switch (eval(group_number)){
		                        case 1 :
		                            var data = { group1 :'<span id="' + timetable_id + '">' + 
		                            		                 '<input type="checkbox"  id=' + studentlist[stucnt]['student_roll_no'] + ' tabindex="'+ (stucnt+25) +'">' +
		                            		                 '<label for="' + studentlist[stucnt]['student_roll_no'] + '">  ' +  
		                            		                                 studentlist[stucnt]['student_roll_no'] + "  " + studentlist[stucnt]['first_name'] + ' ' + studentlist[stucnt]['last_name'] +
		                            		                 '</label>'+
		                            		             '</span>'} ;
		                            $("#stulistgrid").setRowData(stucnt+1, data);
		                            $("#stulistgrid").setCell(stucnt+1, 
		                            		                  'group1', 
		                            		                  "", 
		                            		                  "", 
		                            		                  {title: studentlist[stucnt]['first_name'] + "  "  + studentlist[stucnt]['last_name'] });
		                            							continue;
		                        case 2 :
	                                var data = { group2 :'<span id="' + timetable_id + '">' + 
	                                        '<input type="checkbox"  id=' + studentlist[stucnt]['student_roll_no'] + ' tabindex="'+ (stucnt+60) +'">' +
	                                        '<label for="' + studentlist[stucnt]['student_roll_no'] + '">  ' +  
	                                                        studentlist[stucnt]['student_roll_no'] + "  " + studentlist[stucnt]['first_name'] + ' ' + studentlist[stucnt]['last_name'] + 
	                                        '</label>'+
	                                    '</span>'} ;
					               $("#stulistgrid").setRowData(stucnt+1, data);
					               $("#stulistgrid").setCell(stucnt+1, 
					                                         'group2', 
					                                         "", 
					                                         "", 
					                                         {title: studentlist[stucnt]['first_name'] + "  "  + studentlist[stucnt]['last_name'] });
					               								continue;
		                        case 3 :
	                                var data = { group3 :'<span id="' + timetable_id + '">' + 
	                                        '<input type="checkbox"  id=' + studentlist[stucnt]['student_roll_no'] + ' tabindex="'+ (stucnt+90) +'">' +
	                                        '<label for="' + studentlist[stucnt]['student_roll_no'] + '">  ' +  
	                                                        studentlist[stucnt]['student_roll_no'] + "  " + studentlist[stucnt]['first_name'] + ' ' + studentlist[stucnt]['last_name'] +
	                                        '</label>'+
	                                    '</span>'} ;
	                               $("#stulistgrid").setRowData(stucnt+1, data);
	                               $("#stulistgrid").setCell(stucnt+1, 
	                                                         'group3', 
	                                                         "", 
	                                                         "", 
	                                                         {title: studentlist[stucnt]['first_name'] + "  "  + studentlist[stucnt]['last_name'] });
	                               continue;
		                        default : alert('Unknown group_number :'+group_number);
		                    }
						}
						
						
					}
					var destination = $('#stulistgrid').offset().top;
					$("html,body").animate({ scrollTop: destination-40}, 1500, 'swing', function() {
						$("#statusdiv").show('highlight',null,'slow');
					});
					// Check is Period Taken
					
					var timetable_ids="";			
					for(cnt=0;cnt < group_info.length;cnt++)
					{
						timetable_ids = timetable_ids + "timetable_id:" + group_info[cnt]['timetable_id']  + " ";
					}
					
					$.ajax({
						type: "GET",
						url: isPeriodTakenUrl ,
						async : false,
						dataType : "json",
						data: {timetable_ids : timetable_ids , period_date : period_date},
						success: function(response) {
						if(response == false)
						{
							$('#iagree').removeAttr('disabled');
						}
						else
						{
							
							$('#iagree').attr('disabled', 'disabled');
							$('#totalabsent').val(response.length);
							if(response.length > 0 )
							{
							for(var cnt=0;cnt < response.length; cnt++)
							{
								$("#" + response[cnt]['student_roll_no']).attr("checked",1);
								$('label[for='+response[cnt]['student_roll_no']+']').addClass('checked');
								//$("#" + response[cnt]['student_roll_no']).parents("td:first").addClass("checked");
							}
							}
							
							$("#stulistgrid :checkbox").attr("disabled",'disabled');
							alert("Attendance is Already Marked");
								
						}
							
						},
						
						error: function(request,error) {
							alert("Bad Request: "+ request+ " " + error);
						}
						});
							

					/*$.get(isPeriodTakenUrl ,{timetable_ids : timetable_ids , period_date : period_date },function(data){
						alert(data);
					});*/

					$('#stulistgrid input[type=checkbox]').customInput();
				    $('#stulistgrid input[type=checkbox][class!=checkGroup]').bind("click", function(e){
				    	updateStatus(this);
				      });

				    $('#stulistgrid input[type=checkbox][class=checkGroup]').bind("click", function(e){
							selectAll(this);
	                  });

				}
						
				});
				

				}
			}
		});
		
	};
	
	$('#iagree').attr('disabled', 'disabled');
	jQuery("#btnmark").click( function() {
        if(group_info !=null)
        {
        var cnt=0;
        var timetable_ids = "";
        var msg = "Total Students:" + $("#totalstudents").val() + "\n" + " Absent Students:" +  $("#totalabsent").val() +"\n" +"Submit Attendance?";
        if (confirm(msg))
        {
            
        for(cnt=0;cnt < group_info.length;cnt++)
        {
            timetable_ids = timetable_ids + "timetable_id:" + group_info[cnt]['timetable_id']  + " ";
            if(subject_mode_id == 'LEC')
            {
                break;
            }
        }

        var studentlst = "";
        var tmptimetable_id;
        var roll_no;
        $("#stulistgrid").find("input:checked").each(function(i) {
             roll_no=$(this).attr( "id");
             tmptimetable_id=$(this).parents("span:first").attr("id");
             if(tmptimetable_id){
                 studentlst =  studentlst + "timetable_id:" + tmptimetable_id + "#student_roll_no:" + roll_no +" ";
             }     
           });
         
           
        $.ajax({
            type: "GET",
            url: periodAttendanceUrl ,
            async : false,
            data: {timetable_ids : timetable_ids , period_date : period_date , staff_id : staff_id },
            success: function(request) {

			if(studentlst.length > 0)
			{
           	 $.ajax({
                 type: "GET",
                 url: studentAttendanceUrl ,
                 async : false,
                 data: {studentlst : studentlst , period_date : period_date },
                 success: function(response) {
                     alert(response);
                     group_info=null;
                     hideColumns();
                     $("#totalstudents").val('0');
                     $("#totalabsent").val('0');
                     $("#statusdiv").hide();
                 },
                 
                 error: function(request,error) {
                     alert(request);
                 }
                 });

			}
			else
			{
					alert("Attendance is marked successfully.");
					group_info=null;
                    hideColumns();
                    $("#totalstudents").val('0');
                    $("#totalabsent").val('0');
                    $("#statusdiv").hide();
			}
				   
            },
            error: function(request,error) {
                alert("Period Attendance Not Exists");
                group_info=null;
                hideColumns();
                $("#totalstudents").val('0');
                $("#totalabsent").val('0');
                $("#statusdiv").hide();
                return;
            }
            });
       
        }
        else
        {
            $("#btnmark").hide();
            $('#iagree').attr('checked',0); 
        }
        }
    });
	
	hidePeriodColumns();	
		
	$('#iagree').click(function(){
		if($('#iagree').attr('checked'))
		{
			$("#btnmark").show();	
		}
		else
		{
			$("#btnmark").hide();	
		}
		});
	

function selectAll(component)
{
	var checked=component.checked;
	var group_id = component.id;
	if(global_Info != null)
	{
		var studentlist= global_Info[group_id]['students'];
	for(var stucnt=0;stucnt < studentlist.length ; stucnt++ )
	{
			$("#" + studentlist[stucnt]['student_roll_no']).attr("checked",checked);
			if(checked)
			{
				$('label[for='+studentlist[stucnt]['student_roll_no']+']').addClass('checked');
			}
			else
			{
				$('label[for='+studentlist[stucnt]['student_roll_no']+']').removeClass('checked');
							
			}
		
	}
	
	updateStatus();
	}
}
function hideColumns()
{
	
	$("#stulistgrid").hideCol(["group1","group2" , "group3"]);
    
}
function hidePeriodColumns()
{
	$("#prdlst").hideCol(["subject_code","subject_mode_id" , "period_number" , "department_id","degree_id","semester_id"] );
}
function showPeriodColumns()
{
	$("#prdlst").showCol(["subject_code","subject_mode_id" , "period_number" , "department_id","degree_id","semester_id"] );
}

function updateStatus(component){
	var allcheck=0;
	if(group_info != null){
		for(cnt = 0 ;cnt < group_info.length ;cnt++ ){
			if($("#" + group_info[cnt]['group_id']).attr("checked")){
				allcheck++;
			}		
		}
		
		var cnt=0;
		var tmp= $("#stulistgrid").find("input:checked").length - allcheck;
		$('#totalabsent').val( tmp);
		
		if(component){
			if(component.checked){
				$(component).parent("label:first").addClass("checked");
			} else {
				$(component).parent("label:first").removeClass("checked");
				$(component).parent("label:first").removeClass("focus");
				
			}
		}
	}
}
function setDefault()
{
	$('#totalabsent').val('0');
	$("#btnmark").hide();
	$('#iagree').attr('checked',0);	
	$('#totalstudents').val('0');
}
});
</script>




